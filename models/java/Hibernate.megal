module java.Hibernate

import java.JavaPlatform
import java.JDBC
import SQL
import XML

/* The framework Hibernate supports the synchronization
between Java objects and a relational database */
Hibernate : Framework;
    = "http://hibernate.org/";
    uses Java;
    uses XML;
    partOf JavaClassLibrary;
    realizes ObjectRelationalMapping;
    belongsTo JavaWare;
    belongsTo SQLWare;
    reuses JDBC.

/* An auxiliary file deals with configuring the connection
and the actual mapping rules */
HibernateCFG : ConfigurationLanguage;
    = "https://docs.oracle.com/cd/E13224_01/wlw/docs103/guide/ormworkbench/hibernate-tutorial/tutHibernate9.html";
    subsetOf XML.
Hibernate implements HibernateCFG.
?config : Artifact;
    elementOf HibernateCFG;
    hasRole Configuration;
    manifestsAs File.
//TODO: How to say that it defines the actual ObjectRelationalMapping

/* In the following use case we want to illustrate important
facts for a modification of the database using Java code. */
?create : Artifact;
    elementOf SQLDDL;
    hasRole Schema;
    manifestsAs File.
?database1 : Artifact;
    elementOf ?JDBCDatabaseFormat;
    hasRole Database;
    manifestsAs File.
?database2 : Artifact;
    elementOf ?JDBCDatabaseFormat;
    hasRole Database;
    manifestsAs File.
?javaClass : Artifact;
    elementOf Java;
    hasRole POJO;
    manifestsAs File.

/* Demonstrating querying with embedded SQL */
?table1 : Artifact;
    elementOf ?JDBCDatabaseFormat;
    hasRole Database;
    manifestsAs Fragment;
    partOf ?database1.
?object1 : Artifact;
    elementOf JVM.Object;
    hasRole Value;
    manifestsAs Transient.
Hibernate.EmbeddedSQL : QueryLanguage;
    = "http://docs.jboss.org/hibernate/orm/5.2/userguide/html_single/Hibernate_User_Guide.html#batch-bulk-hql";
    embeddedInto Java.
Hibernate implements Hibernate.EmbeddedSQL.
?queryclass : Artifact;
    elementOf Java;
    hasRole SourceCode;
    manifestsAs File.
?query : Artifact;
    elementOf Hibernate.EmbeddedSQL;
    hasRole Query;
    manifestsAs Fragment;
    partOf ?queryclass.
loadObject : HibernateCFG # ?JDBCDatabaseFormat # Hibernate.EmbeddedSQL -> JVM.Object.
Hibernate implements loadObject.
loadObject(?config, ?database1,?query) |-> ?object1.

/* Now imagine some Java program would change an object and commit
changes */
modifyObject : JVM.Object -> JVM.Object.
commit : HibernateCFG # JVM.Object # ?JDBCDatabaseFormat -> ?JDBCDatabaseFormat.
?object2 : Artifact;
    elementOf JVM.Object;
    hasRole Value;
    manifestsAs Transient.
?modifyingClass : Artifact;
    elementOf Java;
    hasRole SourceCode;
    manifestsAs File;
    implements modifyObject.
Hibernate implements commit.
modifyObject(?object1) |-> ?object2.
commit(?config,?object2,?database1) |-> ?database2.
?table2 : Artifact;
    elementOf ?JDBCDatabaseFormat;
    hasRole Database;
    manifestsAs Fragment;
    partOf ?database2.
loadObject(?config,?database2,?query) |-> ?object2.

/* Some conformance relationships to think about */
?table1 conformsTo ?create.
?table2 conformsTo ?create.
?object1 conformsTo ?javaClass.
?object2 conformsTo ?javaClass.

/* Correspondence between tables and objects */
?javaClass correspondsTo ?create.
?object1 correspondsTo ?table1.
?object2 correspondsTo ?table2.